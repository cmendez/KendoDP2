@using Kendo.Mvc.UI
@using KendoDP2.Areas.Configuracion.Models
@using KendoDP2.Areas.Organizacion.Models
@using KendoDP2.Areas.Eventos.Models

@model KendoDP2.Areas.Eventos.Models.EventoDTO
@{
    IList<AreaDTO> areas = ViewBag.areas;
    IList<EstadoEventoDTO> estadosEventos = ViewBag.estadosEventos;
    IList<PuestoDTO> puestos = ViewBag.puestos;
    IList<TipoEventoDTO> tipoEventos = ViewBag.tipoEventos;
    
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div  style="width:900px;">
        <div class="row-fluid">
            <!-- contenedor superior izquierdo: campos -->
            <div class="span10">
                <div class="row-fluid">
                    <div class="span5">
                        <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.Nombre)</div>
                    </div>
                    <div class="span7">
                        <div class="editor-field" style="width: 100%; text-align: left;">
                            @Html.EditorFor(model => model.Nombre)
                            @Html.ValidationMessageFor(model => model.Nombre)
                        </div>
                    </div>
                </div>

                <div class="row-fluid">
                    <div class="span5">
                        <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.Inicio)</div>
                    </div>
                    <div class="span7">
                        <div class="editor-field" style="width: 100%; text-align: left;">
                            @Html.EditorFor(model => model.Inicio)
                            @Html.ValidationMessageFor(model => model.Inicio)
                        </div>
                    </div>
                </div>

                <div class="row-fluid">
                    <div class="span5">
                        <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.Fin)</div>
                    </div>
                    <div class="span7">
                        <div class="editor-field" style="width: 100%; text-align: left;">
                            @Html.EditorFor(model => model.Fin)
                            @Html.ValidationMessageFor(model => model.Fin)
                        </div>
                    </div>
                </div>


                <div class="row-fluid">
                    <div class="span5">
                        <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.EstadoID)</div>
                    </div>
                    <div class="span7 responsive">
                        @Html.DropDownListFor(model => model.EstadoID, 
                            new SelectList(estadosEventos, "ID", "Descripcion"), new { style = "width:100%" })
                    </div>
                </div>


                <div class="row-fluid">
                    <div class="span5">
                        <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.TipoEventoID)</div>
                    </div>
                    <div class="span7 responsive">
                        @Html.DropDownListFor(model => model.TipoEventoID, 
                            new SelectList(tipoEventos, "ID", "Descripcion"), new { style = "width:100%" })
                    </div>
                </div>
                        
        
            </div>
   
        </div>
        </div>
 
 
<script>
    $("#AreaID").change(function () {
        var areaID = $(this).val();
        $.getJSON("@Url.Action("_GetPuestos", "Colaboradores", new {Area = "Organizacion"})",
               { areaID: areaID },
               function (puestos) {
                   var select = $("#PuestoID");
                   select.find('option').remove().end();
                   select.append($('<option/>', {
                       value: 0,
                       text: ""
                   }));
                     $.each(puestos, function (index, itemData) {
                       select.append($('<option/>', {
                           value: itemData.ID,
                           text: itemData.Nombre
                       }));
                     });
                     if (puestos.length > 0)
                         select.find('option:first').attr("selected", "selected");
              
               });
    });

    


</script>
    
<script type="text/javascript">
    var canload = true;
    function loadImage(force) {
        force = typeof force !== 'undefined' ? force : false;
        if (canload || force) {
            $("#imagen").attr("src", "/Organizacion/Colaboradores/ViewImageDeColaborador?colaboradorID=" + $("#ID").val());
            canload = false;
        }
    }
    function loadImageWithID(ID) {
        $("#imagen").attr("src", "/Misc/GetImagen?archivoID=" + ID);
    }
    function bajarCV() {
        if ($("#CurriculumVitaeID").val() == '0' || $("#CurriculumVitaeID").val() == 0)
            alert("No hay ningun curriculum registrado");
        else {
            $("#bajar-cv-anchor").attr("href", "/Organizacion/Colaboradores/BajarCurriculum?curriculumVitaeID=" + $("#CurriculumVitaeID").val());
            $("a#bajar-cv-anchor")[0].click();
        }
    }
</script> 
        

}        

