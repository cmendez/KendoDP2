@using Kendo.Mvc.UI
@using KendoDP2.Areas.Reclutamiento.Models
@using KendoDP2.Areas.Configuracion.Models
@using KendoDP2.Areas.Organizacion.Models
@using KendoDP2.Areas.Evaluacion360.Models

@model KendoDP2.Areas.Reclutamiento.Models.SolicitudPromocionDTO
@{
    AreaDTO area = ViewBag.area;
    EstadosSolicitudOfertaLaboralDTO estadoSolicitudOferta = ViewBag.estadoSolicitudOferta;
    PuestoDTO puesto = ViewBag.puesto;
    ColaboradorDTO responsable = ViewBag.responsable;
    ColaboradorDTO promovido = ViewBag.promovido;
    IEnumerable<FuncionDTO> funciones = ViewBag.funciones;
    IEnumerable<CapacidadDTO> capacidades = ViewBag.capacidades;
    string funcionesJson = Json.Encode(funciones);
    string capacidadesJson = Json.Encode(capacidades);
    bool yaValidado = ViewBag.yaValido;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    
    <div style="width: 900px;">
        <div class="row-fluid">
            <!-- contenedor superior izquierdo: campos -->
            <div class="span6">

                <div class="row-fluid">
                    <div class="span5">
                        <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.AreaID)</div>
                    </div>
                    <div class="span7 responsive">
                        @Html.TextBox("Area", area.Nombre, new { @readonly = "readonly" })

                    </div>
                </div>

                <div class="row-fluid">
                    <div class="span5">
                        <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.PuestoID)</div>
                    </div>
                    <div class="span7">
                        @Html.TextBox("Puesto", puesto.Nombre, new { @readonly = "readonly" })
                    </div>
                </div>


                <div class="row-fluid">
                    <div class="span5">
                        <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.ResponsableID)</div>
                    </div>
                    <div class="span7 responsive">
                        @Html.TextBox("Responsable", responsable.NombreCompleto, new { @readonly = "readonly" })
                    </div>
                </div>


                <div class="row-fluid">
                    <div class="span5">
                        <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.AscendidoID)</div>
                    </div>
                    <div class="span7 responsive">
                        @Html.TextBox("Promovido", promovido.NombreCompleto, new { @readonly = "readonly" })
                    </div>
                </div>


                <div class="row-fluid">
                    <div class="span5">
                        <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.EstadoSolicitudOfertaLaboralID)</div>
                    </div>
                    <div class="span7 responsive">
                        @Html.TextBox("Estado", estadoSolicitudOferta.Descripcion, new { @readonly = "readonly" })
                    </div>
                </div>



            </div>
            <!-- fin contenedor superior izquierdo: campos -->
            <!-- contenedor superior derecho: Datos -->
            <div class="span5">
                @Html.HiddenFor(model => model.ID)


                <div class="row-fluid">
                    <div class="span5">
                        <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.FechaInicioNuevoPuesto)</div>
                    </div>
                    <div class="span7">
                        @Html.TextBoxFor(model => model.FechaInicioNuevoPuesto, new { @readonly = "readonly" })

                    </div>
                </div>

                <div class="row-fluid">
                    <div class="span5">
                        <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.SueldoTentativo)</div>
                    </div>
                    <div class="span7">
                        @Html.TextBoxFor(model => model.SueldoTentativo, new { @readonly = "readonly" })

                    </div>
                </div>

                <div class="row-fluid">
                    <div class="span5">
                        <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.FechaRequerimiento)</div>
                    </div>
                    <div class="span7">
                        <div class="editor-field" style="width: 100%; text-align: left;">
                            @Html.TextBoxFor(model => model.FechaRequerimiento, new { @readonly = "readonly" })
                        </div>
                    </div>
                </div>

                <div class="row-fluid">
                    <div class="span5">
                        <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.FechaFinRequerimiento)</div>
                    </div>
                    <div class="span7">
                        <div class="editor-field" style="width: 100%; text-align: left;">
                            @Html.TextBoxFor(model => model.FechaFinRequerimiento, new { @readonly = "readonly" })
                        </div>
                    </div>
                </div>



            </div>
            <!-- fin contenedor superior derecho: foto -->
        </div>
    </div>
    <!-- contenedor inferior: campos -->
    <div style="width: 900px;">
        <div class="row-fluid">
            @Html.Label("Detalles de la solicitud:", new { style = "font-weight: bold;" })

            <div class="row-fluid">
                <div class="span3">
                    <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.Descripcion)</div>
                </div>
                <div class="span7">
                    <div class="editor-field" style="width: 100%; text-align: left;">
                        @Html.TextAreaFor(model => model.Descripcion, new { @readonly = "readonly" })
                    </div>
                </div>
            </div>

        </div>
    </div>
    
    <div style="width: 900px;">

        <div class="row-fluid">
            <div class="span6">
                @Html.Label("Lista Funciones:", new { style = "font-weight: bold;" })
                <div class="twit-reader">
                    <div id="list-view"></div>
                </div>

            </div>


            <div class="span6">
                @Html.Label("Lista Competencias:", new { style = "font-weight: bold;" })
                <div class="twit-reader">
                    <div id="list-view2"></div>
                </div>
            </div>

        </div>
    </div>
    

    <div style="width: 900px; margin-top:15px;">
        <div class="row-fluid">
            <div class="span3">
                <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.Comentarios)</div>
            </div>
            <div class="span7">
                <div class="editor-field" style="width: 100%; text-align: left;">
                    @Html.TextAreaFor(model => model.Comentarios)
                    @Html.ValidationMessageFor(model => model.Comentarios)

                </div>
            </div>
        </div>
    </div>
    if (!yaValidado)
    {
        <a class="btn green" href="javascript:CambiaEstadoAceptar();"> Aceptar </a>
        <a class="btn green" href="javascript:CambiaEstadoRechazar();"> Rechazar </a>
    }
    else
    {
        <label class="label">Esta solicitud de promoción ya fue aprobada o rechazada</label>
        <br />
    }
    <!-- fin contenedor inferior: campos -->

 
    <script type="text/x-kendo-tmpl" id="template">
    <div class="twit">
        <p>#:Nombre#</p>
    </div>
    </script>
    
    <script>
      
        var funciones = '@Html.Raw(funcionesJson)';
        $("#list-view").kendoListView({
            dataSource: jQuery.parseJSON(funciones),
            template: kendo.template($("#template").html())
        });
        var capacidades = '@Html.Raw(capacidadesJson)';
        $("#list-view2").kendoListView({
            dataSource: jQuery.parseJSON(capacidades),
            template: kendo.template($("#template").html())
        });

        function CambiaEstadoAceptar(){
            $.ajax({
                url: '@Url.Action("CambiaEstadoSolicitudAprobada", "SolicitudPromociones", new { Area = "Reclutamiento" })?solicitudID=' + @Model.ID,
            dataType: 'JSON',
            type: 'POST',
            data: { solicitudID : @Model.ID},
                success: function(response){
                    handleError(response, "Se promovió al colaborador. Verificar su línea de carrera");
                    $("#SolicitudPromocionGrid").data('kendoGrid').dataSource.read();
                    $("#Details").data('kendoWindow').close();
                }
        });
    }

        function CambiaEstadoRechazar(){
            $.ajax({
                url: '@Url.Action("CambiaEstadoSolicitudRechazada", "SolicitudPromociones", new { Area = "Reclutamiento" })?solicitudID=' + @Model.ID,
                dataType: 'JSON',
                type: 'POST',
                data: { solicitudID : @Model.ID},
                success: function(response){
                    $("#SolicitudPromocionGrid").data('kendoGrid').dataSource.read();
                    $("#Details").data('kendoWindow').close();
            }
            });
    }
    </script>
    
   

}

