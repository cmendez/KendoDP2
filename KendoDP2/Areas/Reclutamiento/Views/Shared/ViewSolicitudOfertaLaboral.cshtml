@using Kendo.Mvc.UI
@using KendoDP2.Areas.Reclutamiento.Models
@using KendoDP2.Areas.Configuracion.Models
@using KendoDP2.Areas.Organizacion.Models

@model KendoDP2.Areas.Reclutamiento.Models.OfertaLaboralDTO
@{
    IList<AreaDTO> areas = ViewBag.areas;
    IList<EstadosSolicitudOfertaLaboralDTO> estadosSolicitudOferta = ViewBag.estadosSolicitudOferta;
    IList<ModoSolicitudOfertaLaboralDTO> modosSolicitudOferta = ViewBag.modosSolicitudOferta;
    IList<PuestoDTO> puestos = ViewBag.puestos;
    IList<ColaboradorDTO> colaboradores = ViewBag.colaboradores;
    
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    
    <div  style="width:900px;">
        <div class="row-fluid">
            <!-- contenedor superior izquierdo: campos -->
            <div class="span6">
                                
            <div class="row-fluid">
                <div class="span5">
                    <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.AreaID)</div>
                </div>
                <div class="span7 responsive">
                    @Html.TextBox(areas.Where(p => p.ID == Model.AreaID).FirstOrDefault().Nombre, new {@readonly = "readonly"})                  
                  
                </div>
            </div>

            <div class="row-fluid">
                <div class="span5">
                    <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.PuestoID)</div>
                </div>
                <div class="span7">
                    @Html.TextBox(puestos.Where(p => p.ID == Model.PuestoID).FirstOrDefault().Nombre, new {@readonly = "readonly"})                  
                </div>
            </div>


            <div class="row-fluid">
                <div class="span5">
                    <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.ResponsableID)</div>
                </div>
                <div class="span7 responsive">
                    @Html.TextBox(colaboradores.Where(p => p.ID == Model.ResponsableID).FirstOrDefault().NombreCompleto, new {@readonly = "readonly"})                  
                </div>
              </div>


             <div class="row-fluid">
                <div class="span5">
                    <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.ModoPublicacionID)</div>
                </div>
                <div class="span7 responsive">
                    @Html.TextBox(modosSolicitudOferta.Where(p => p.ID == Model.PuestoID).FirstOrDefault().Descripcion, new {@readonly = "readonly"})                  
                </div>
            </div>


            <div class="row-fluid">
                <div class="span5">
                    <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.EstadoSolicitudOfertaLaboralID)</div>
                </div>
                <div class="span7 responsive">
                    @Html.TextBox(estadosSolicitudOferta.Where(p => p.ID == Model.PuestoID).FirstOrDefault().Descripcion, new {@readonly = "readonly"})                  
                </div>
            </div>

                                 
        
            </div>
            <!-- fin contenedor superior izquierdo: campos -->
            <!-- contenedor superior derecho: Datos -->
            <div class="span5">
                @Html.HiddenFor(model => model.ID)
            

            <div class="row-fluid">
                <div class="span5">
                    <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.NumeroVacantes)</div>
                </div>
                <div class="span7">
                            @Html.TextBoxFor(model => model.NumeroVacantes, new {@readonly = "readonly"})

                </div>
            </div>
            
            <div class="row-fluid">
                <div class="span5">
                    <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.SueldoTentativo)</div>
                </div>
                <div class="span7">
                            @Html.TextBoxFor(model => model.SueldoTentativo, new {@readonly = "readonly"})

                </div>
            </div>

            <div class="row-fluid">
                    <div class="span5">
                        <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.FechaRequerimiento)</div>
                    </div>
                    <div class="span7">
                        <div class="editor-field" style="width: 100%; text-align: left;">
                            @Html.TextBox(Model.FechaRequerimiento, new { @readonly = "readonly" })
                        </div>
                    </div>
                </div>

              <div class="row-fluid">
                    <div class="span5">
                        <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.FechaFinRequerimiento)</div>
                    </div>
                    <div class="span7">
                        <div class="editor-field" style="width: 100%; text-align: left;">
                            @Html.TextBox(Model.FechaFinRequerimiento, new { @readonly = "readonly" })
                        </div>
                    </div>
                </div>

       		

          </div>
            <!-- fin contenedor superior derecho: foto -->
        </div>
    </div>
    <!-- contenedor inferior: campos -->
    <div style="width:900px;">
        <div class="row-fluid" >
                @Html.Label("Detalles Convocatoria:", new { style = "font-weight: bold;" })
            
              <div class="row-fluid">
                    <div class="span3">
                        <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.Descripcion)</div>
                    </div>
                    <div class="span7">
                        <div class="editor-field" style="width: 100%; text-align: left;">
                            @Html.TextAreaFor(model => model.Descripcion, new {@readonly = "readonly"})
                        </div>
                    </div>
                </div>

            </div>
        </div>
    
    <div style="width:900px;">
        
        <div class="span6">

           <div class ="row-fluid">
                
               @Html.Label("Lista Funciones:", new { style = "font-weight: bold;" })
               
            </div>

            <div class ="row-fluid">
                <div class="twit-reader">
                    <div id="listView"></div>
                </div>               
            </div>

        </div>


        <div class="span6">
        
        </div>

    
    </div>
    
    
    <div style="width:900px;">

        <div class="row-fluid">  
          
            <div class="row-fluid">
                    <div class="span3">
                        <div class="editor-label" style="width: 100%; text-align: left;">@Html.LabelFor(model => model.Comentarios)</div>
                    </div>
                    <div class="span7">
                        <div class="editor-field" style="width: 100%; text-align: left;">
                            @Html.EditorFor(model=> model.Comentarios)
                            @Html.ValidationMessageFor(model => model.Comentarios)
                        </div>
                    </div>
                </div>


          </div>
     </div>

    <!-- fin contenedor inferior: campos -->

 
    
   <script type="text/x-kendo-tmpl" id="template">
        <div class="twit">
            <p>#:text#</p>
        </div>
    </script>
      
     <script>
         $(document).ready(function () {
             var dataSource = new kendo.data.DataSource({
                 transport: {
                     read: {
                         url: "http://demos.kendoui.com/service/Twitter/Search", // the remove service url
                         contentType: "application/json; charset=utf-8",
                         type: "GET",
                         dataType: "jsonp",
                         data: {
                             q: "#kendoui"
                         }
                     }
                 },
                 schema: {
                     data: "results",
                     total: "results_per_page"
                 }
             });

             $("#pager").kendoPager({
                 dataSource: dataSource
             });

             $("#listView").kendoListView({
                 dataSource: dataSource,
                 template: kendo.template($("#template").html())
             });
         });
    </script>
    
<script>
    $("#AreaID").change(function () {
        var areaID = $(this).val();
        $.getJSON("@Url.Action("_GetPuestos", "Colaboradores", new {Area = "Organizacion"})",
               { areaID: areaID },
               function (puestos) {
                   var select = $("#PuestoID");
                   select.empty();
                   select.append($('<option/>', {
                       value: 0,
                       text: ""
                   }));
                   $.each(puestos, function (index, itemData) {
                       select.append($('<option/>', {
                           value: itemData.ID,
                           text: itemData.Nombre
                       }));
                   });
               });
    });

    


</script>

        

}        

