@using Kendo.Mvc.UI
@using KendoDP2.Areas.Evaluacion360.Models
@{
    ViewBag.Title = "Por perfil";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{Html.RenderPartial("Titulo", new KendoDP2.Models.Helpers.PageTitle("Evaluaciones por perfil", "Gestione el contenido de las evaluaciones de sus empleados"));}

@*TODO: Resaltar la fila que el usuario apunta para guiar su selección*@ 
@*<script>
    $(document).ready(function () {

        //$('#PerfilesGrid tr').bind('hover', function () {
        //    alert('Resaltar');
        //});

        //Olvidar
        //console.log('imprimiendo el objeto index');
        //console.log($('index'));

        //console.log('$(#PerfilesGrid tr [role="row"])');
        //console.log($('#PerfilesGrid tr [role="row"]'));


        //console.log('$(#PerfilesGrid [role="row"])');
        //console.log($('#PerfilesGrid [role="row"]'));

        console.log('$(#PerfilesGrid');
        console.log($('#PerfilesGrid'));

        //$('#PerfilesGrid k-grid-content table tbody tr').on('hover',
        $('#PerfilesGrid').on('hover',
          function () {
              //$(this).css("background","yellow");
              console.log('entraste');
          },
          function () {
              //$(this).css("background","");
              console.log('saliste');
          }
        );
        //$('#PerfilesGrid tr').on('hover',
        //  function () {
        //      //$(this).css("background","yellow");
        //      console.log('entraste');
        //  }, 
        //  function () {
        //      //$(this).css("background","");
        //      console.log('saliste');
        //  }
        //);
    });
</script>*@

<div class="portlet box green">
    <div class="portlet-title">
        <h4><i class="icon-group"></i>Perfiles de trabajo</h4>
        <div class="tools">
	        <a href="javascript:;" class="collapse"></a>
        </div>
	</div>
    <div class="portlet-body">
        @(Html.Kendo().Grid<PerfilDTO>()
            .Name("PerfilesGrid")
            .Columns(columns =>
                {
                    columns.Bound(p => p.Nombre).Title("Seleccione un perfil");
                    //columns.Command(command => { command.Edit().Text("Editar").UpdateText("Guardar").CancelText("Cancelar"); command.Destroy().Text("Eliminar"); }).Width(200);
                }
            )
            //.ToolBar(toolbar => toolbar.Create().Text("Registrar"))
            //.Editable(editable => editable
            //    .Mode(GridEditMode.PopUp)
            //    .DisplayDeleteConfirmation("¿Está seguro que desea eliminar este registro?")
            //    .Window(w => w.Title("Ingrese los datos"))
            //)
            .Pageable(paper => paper.Refresh(true))
            .Filterable()
            .Sortable()
            .Scrollable(w => w.Height(330))
            .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(20)
                .Model(model => model.Id(p => p.ID))
                //.Create(update => update.Action("EditingInline_Create", "Competencias"))
                .Read(read => read.Action("EditingInline_Read", "Configuracion360"))
                //.Update(update => update.Action("EditingInline_Update", "Competencias"))
                //.Destroy(update => update.Action("EditingInline_Destroy", "Competencias"))
            )
        )
@*        @(Html.Kendo().Grid<CompetenciaConTotalNivelesDTO>()
            .Name("PerfilesGrid")
            .Columns(columns =>
                {
                    columns.Bound(p => p.Nombre);
                    //columns.Command(command => { command.Edit().Text("Editar").UpdateText("Guardar").CancelText("Cancelar"); command.Destroy().Text("Eliminar"); }).Width(200);
                }
            )
            .ToolBar(toolbar => toolbar.Create().Text("Agregar Competencia"))
            //.Editable(editable => editable
            //    .Mode(GridEditMode.PopUp)
            //    .DisplayDeleteConfirmation("¿Está seguro que desea eliminar este registro?")
            //    .Window(w => w.Title("Ingrese los datos"))
            //)
            .Pageable(paper => paper.Refresh(true))
            .Filterable()
            .Sortable()
            .Scrollable(w => w.Height(330))
            .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(5)
                .Model(model => model.Id(p => p.ID))
                //.Create(update => update.Action("EditingInline_Create", "Competencias"))
                //.Read(read => read.Action("EditingInline_Read", "Configuracion360"))
                //.Update(update => update.Action("EditingInline_Update", "Competencias"))
                //.Destroy(update => update.Action("EditingInline_Destroy", "Competencias"))
            )
        )*@
    </div>
</div>