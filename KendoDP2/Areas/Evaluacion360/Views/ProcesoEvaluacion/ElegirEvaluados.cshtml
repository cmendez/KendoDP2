@model KendoDP2.Areas.Evaluacion360.Models.ProcesoEvaluacion

@{
    ViewBag.Title = "Elegir evaluados";
    Layout = "~/Views/Shared/_Layout.cshtml";
    IList<KendoDP2.Areas.Organizacion.Models.ColaboradorDTO> colaboradores = ViewBag.colaboradores;
    IList<KendoDP2.Areas.Evaluacion360.Models.EstadoColaboradorXProcesoEvaluacionDTO> estados = ViewBag.estados;
}

@{Html.RenderPartial("Titulo", new KendoDP2.Models.Helpers.PageTitle("Elegir evaluados", "Elija los colaboradores evaluados en este proceso"));}

<div class="portlet box green">
    <div class="portlet-title">
        <h4><i class="icon-reorder"></i>Procesos de evaluación</h4>
        <div class="tools">
	        <a href="javascript:;" class="collapse"></a>
        </div>
	</div>
    <div class="portlet-body">
        <div class="row-fluid">
            <div class="span4">
                @(Html.Kendo().ComboBox()
                    .Name("ComboColaboradores")
                    .Placeholder("Agregue un colaborador...")
                    .DataTextField("NombreCompleto")
                    .DataValueField("ID")
                    .Filter("contains")
                    .BindTo(colaboradores)
                    .Suggest(true)
                    .HtmlAttributes(new { style = "width:100%" })
                    .Events(e => e.Close("comboCompetenciasSelection"))
                )
            </div>
            <div class="span5">

            </div>
        </div>
        <div class="row-fluid information-container">
            @(Html.Kendo().Grid<KendoDP2.Areas.Evaluacion360.Models.ColaboradorXProcesoEvaluacionDTO>()
                .Name("ColaboradoresDeProcesoEvaluacionGrid")
                .Columns(columns =>
                    {
                        columns.Bound(p => p.ColaboradorDTO.ApellidoPaterno);
                        columns.Bound(p => p.ColaboradorDTO.ApellidoMaterno);
                        columns.Bound(p => p.ColaboradorDTO.Nombre);
                        columns.ForeignKey(p => p.EstadoColaboradorXProcesoEvaluacionID, new SelectList(estados, "ID", "Nombre"));
                        columns.Command(command =>
                        {
                            command.Destroy().Text("Eliminar");
                        }).Width(200);
                    }
                )
                .Editable(
                    e => e.DisplayDeleteConfirmation("¿Realmente desdea eliminar este registro?")
                )
                .Pageable(paper => paper.Refresh(true))
                .Filterable()
                .Sortable()
                .Scrollable(w => w.Height(330))
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .PageSize(20)
                    .Model(model => { model.Id(p => p.ID); })
                    .Read(read => read.Action("ReadEvaluados", "ProcesoEvaluacion", new { procesoID = Model.ID }))
                    .Destroy(update => update.Action("DestroyEvaluados", "ProcesoEvaluacion"))
                )
            )
        </div>
    </div>
</div>

<script type="text/javascript">
    function comboCompetenciasSelection(e) {
        var comboColaboradores = $("#ComboColaboradores").data('kendoComboBox');
        if (comboColaboradores.selectedIndex == -1)
            return;
        var colaboradorID = comboColaboradores.dataItem(comboColaboradores.selectedIndex).ID;
        $.ajax({
            url: '@Url.Action("AddEvaluadosColaborador", "ProcesoEvaluacion", new {Area = "Evaluacion360"})',
            dataType: 'JSON',
            type: 'POST',
            data: {procesoID: @Model.ID , colaboradorID: colaboradorID},
            success: function(data){
                if(data.success)
                    $("#ColaboradoresDeProcesoEvaluacionGrid").data('kendoGrid').dataSource.read();
                else
                    alert("El colaborador seleccionado ya se encuentra en la lista de evaluados");
            },
            error: function(){
                alert("Hubo un error en la operación");
            }
        });
    }
</script>