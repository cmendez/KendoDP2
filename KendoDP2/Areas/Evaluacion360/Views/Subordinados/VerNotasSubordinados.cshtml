@using KendoDP2.Areas.Evaluacion360.Models
@model KendoDP2.Areas.Evaluacion360.Models.ProcesoEvaluacion

@{
    ViewBag.Title = "VerNotasSubordinados";
    Layout = "~/Views/Shared/_Layout.cshtml";
    IList<EstadoColaboradorXProcesoEvaluacionDTO> estados = ViewBag.estados;
}

@{Html.RenderPartial("Titulo", new KendoDP2.Models.Helpers.PageTitle("Mis colaboradores", "Revise las notas de sus colaboradores"));}

<div class="portlet box green">
    <div class="portlet-title">
        <div class="caption"><i class="icon-reorder"></i>Procesos de evaluación: @Model.Nombre</div>
        <div class="tools">
            <a href="javascript:;" class="collapse"></a>
        </div>
    </div>
    <div class="portlet-body">
        <div class="row-fluid">
            <div>
                @(Html.Kendo().Grid<KendoDP2.Areas.Evaluacion360.Models.ColaboradorXProcesoEvaluacionDTO>()
                .Name("ColaboradoresDeProcesoEvaluacionGrid")
                .Columns(columns =>
                    {
                        columns.Bound(pxexe => pxexe.ColaboradorDTO.NombreCompleto).Title("Colaborador Evaluado");
                        columns.ForeignKey(pxexe => pxexe.EstadoColaboradorXProcesoEvaluacionID, new SelectList(estados, "ID", "Nombre")).Visible(true).Title("Estado del proceso");
                        columns.Bound(pxexe => pxexe.Nota).Title("Nota Final");
                        //columns.Bound(pxexe => pxexe.ProcesoID);
                        columns.Template(@<text></text>).Title("Detalle Evaluación").ClientTemplate("<a class='k-button' href='" + Url.Action("VerExamenesSubordinado", "Subordinados") + "?ProcesoID=#=ProcesoID#&EvaluadoID=#=ColaboradorDTO.ID#'>Ver Detalle</a>");

                    }
                )
                .Pageable(paper => paper.Refresh(true))
                .Filterable()
                .Sortable()
                .Scrollable(w => w.Height(330))
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .PageSize(20)
                    .Model(model => { model.Id(p => p.ID); })
                    .Read(read => read.Action("Read_SubordinadosEvaluados", "Subordinados", new { procesoID = Model.ID }))
                    //.Destroy(update => update.Action("DestroyEvaluados", "Subordinados"))
                    //.Events(e => e.RequestEnd("requestEnd"))
                )
                )
            </div>
        </div>
    </div>
</div>
